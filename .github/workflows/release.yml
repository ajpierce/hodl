name: Handle Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Release build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --release
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/hodl
          asset_name: hodl-x86_64
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  build_linux_arm7:
    name: Linux ARMv7 Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-gnueabihf
          override: true
      - name: Install the C cross toolchain
        run: sudo apt-get install -qq gcc-arm-linux-gnueabihf
      - name: Install the cross compiled standard crates
        run: rustup target add armv7-unknown-linux-gnueabihf
      - name: Configure cargo for cross compilation
        run: mkdir .cargo && echo "[target.armv7-unknown-linux-gnueabihf]" >> .cargo/config.toml && echo 'linker = "arm-linux-gnueabihf-gcc"' >> .cargo/config.toml
      - name: Build ARMv7 binary
        run: cargo build --release --target armv7-unknown-linux-gnueabihf
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/armv7-unknown-linux-gnueabihf/release/hodl
          asset_name: hodl-ARMv7
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
